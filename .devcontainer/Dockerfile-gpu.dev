# # Use the NVIDIA CUDA base image with cuDNN and Ubuntu 22.04
# FROM nvidia/cuda:12.6.2-cudnn-devel-ubuntu22.04

# # Set the working directory
# WORKDIR /app

# # Set environment variable to avoid interactive prompts
# ENV DEBIAN_FRONTEND=noninteractive

# # Install dependencies and add the deadsnakes PPA for Python 3.12
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends software-properties-common && \
#     add-apt-repository ppa:deadsnakes/ppa -y && \
#     apt-get update && \
#     apt-get install -y --no-install-recommends \
#     python3-distutils-extra \
#     build-essential \
#     libffi-dev \
#     git \
#     python3.12 \
#     python3.12-dev \
#     python3-distutils \
#     curl && \
#     rm -rf /var/lib/apt/lists/*

# # Symlink python3.12 as the default python
# RUN ln -s /usr/bin/python3.12 /usr/bin/python

# # Install pip for Python 3.12 directly with get-pip.py
# RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 && \
#     python3.12 -m pip install --upgrade pip setuptools wheel

# # Install CUDA Toolkit (includes CUPTI) and GCC for compilation
# RUN apt-get update && \
#     apt-get install -y cuda-toolkit-12-0 gcc && \
#     rm -rf /var/lib/apt/lists/*

# # Install Poetry
# RUN curl -sSL https://install.python-poetry.org | python3.12 - && \
#     ls -la /root/.local/bin
# # Add Poetry to PATH
# ENV PATH="${PATH}:/root/.local/bin"

# # Copy Poetry files for dependency installation
# COPY pyproject.toml /app/

# # Configure Poetry to use the system environment (no virtualenv)
# RUN poetry config virtualenvs.create false

# # Install dependencies without interaction
# RUN poetry install --no-root --no-interaction --with gpu

# # Copy the rest of the application code
# COPY . /app
