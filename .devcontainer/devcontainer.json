// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
{
	"name": "Bridge Development",
	"initializeCommand": [
		"bash",
		"-c",
		"chmod +x .devcontainer/detect-platform.sh && ./.devcontainer/detect-platform.sh > .devcontainer/platform-config.json && echo 'Platform detection complete'"
	],
	"build": {
		"context": "..",
		"dockerfile": "${localEnv:DOCKERFILE:Dockerfile.cpu.dev}"
	},
	"updateContentCommand": "export DOCKERFILE=$(jq -r .dockerfile .devcontainer/platform-config.json) && export PLATFORM_ARGS=$(jq -r .platformArgs .devcontainer/platform-config.json)",
	"onCreateCommand": "echo 'Container created for platform: '$(uname -a)",
	"customizations": {
		"vscode": {
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.testing.pytestEnabled": true,
				"python.testing.unittestEnabled": false,
				"python.testing.nosetestsEnabled": false,
				"python.testing.pytestArgs": [
					"tests",
					"-v",
					"-s",
					"--no-header"
				],
				"python.testing.autoTestDiscoverOnSaveEnabled": true,
				"editor.formatOnSave": true,
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter"
				}
			},
			"extensions": [
				"ms-python.python",
				"ms-azuretools.vscode-docker",
				"ms-python.black-formatter",
				"ms-vscode-remote.remote-containers",
				"ms-azuretools.vscode-docker",
				"GrapeCity.gc-excelviewer",
				"GitHub.copilot",
				"GitHub.copilot-chat",
				"GitHub.remotehub",
				"GitHub.vscode-pull-request-github",
				"ms-toolsai.jupyter",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",
				"ms-vscode-remote.vscode-remote-extensionpack",
				"ms-vscode.remote-repositories",
				"vscodevim.vim",
				"ms-python.vscode-pylance",
				"LittleFoxTeam.vscode-python-test-adapter",
				"hbenl.vscode-test-explorer"
			]
		}
	},
	"runArgs": "${localEnv:PLATFORM_ARGS}",
	"remoteUser": "root",
	"containerEnv": {
		"PYTHONPATH": "${containerWorkspaceFolder}"
	}
}